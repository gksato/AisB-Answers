 (once)=(end)_push-c__push-0__reverse_

# jump
_push-c_=(start):
_push-0_=(start)0
_push-1_=(start)1
_push-add_=(start)_add_

# Reversing mechanism
0_n-zero_=_n-zero_0
1_n-zero_=_n-zero_1
0_n-one_=_n-one_0
1_n-one_=_n-one_1

0_reverse_=_n-zero__reverse_
1_reverse_=_n-one__reverse_
_reverse_*=_push-c_0*

# Half adder
0:_n-zero_=_push-0_:0
0:_n-one_=_push-1_:1
1:_n-zero_=_push-1_:0
1:_n-one_=_push-0__push-add_:1
:_n-=0:_n-
::=:

# Carry _add_ to upper digits
0_add_=1
1_add_=_add_0
(start)_add_=1

# Multiplication processing
*_n-zero_=0*
*_n-one_=_reverse_*

# End processing
(end)0*_reverse_=*_reverse_
(end)1*_reverse_=*_reverse_
(end):*_reverse_=
